#!/usr/local/bin/elixir

# get mix.exs path
{command, mix_exs_path} = 
if length(System.argv) > 0 do

  if length(System.argv) == 1 do
    # No command specified, just bump
    [path | _] = System.argv
    { nil, path}
  else
    [command, path | _] = System.argv
    command = 
    case command do
    "a" -> "add"
    "c" -> "commit"
    end
    {command, path}
  end

else
  {nil, nil}
end

# default to current directory, if no path specified
mix_exs_path = 
if is_nil(mix_exs_path), do: ".", else: mix_exs_path

# Allow specifying path without mix.exs if it contains it.
mix_exs_path = 
if !Regex.match?(~r/mix.exs$/, mix_exs_path) do
  Path.join [mix_exs_path, "mix.exs"]
else
  mix_exs_path
end

 mix_exs_path = 
 if File.exists?(mix_exs_path), do: mix_exs_path, else: nil

mix_exs_path = 
if command && command != "add" && command != "commit" do
  IO.puts "Unrecognized command #{command}; \"add\" and \"commit\" are supported"
  nil
else
  mix_exs_path
end

if !is_nil(mix_exs_path) do
  # Update mix.exs in-place.
  IO.puts "Bumping #{mix_exs_path}"
  File.write mix_exs_path, (
    File.read!(mix_exs_path)
    |> String.split("\n")
    |> (Enum.map fn(line) ->
      Regex.replace(~r/version:\s*"(\d+)\.(\d+)\.(\d+)"/, line, fn(_, major, minor, sub) ->
        {sub, _} = Integer.parse(sub)
        old_version = "#{major}.#{minor}.#{sub}"
        new_version = "#{major}.#{minor}.#{sub + 1}"
        IO.puts "Bumping from #{old_version} to #{new_version}"
        "version: \"#{major}.#{minor}.#{sub + 1}\""
      end)
    end)
    |> Enum.join("\n")
  )

  case command do
    "add" ->
      System.cmd "git", ~w[add mix.exs], cd: Path.dirname(mix_exs_path)
      {output, _} = System.cmd "git", ~w[diff --cached], cd: Path.dirname(mix_exs_path)
      IO.puts output
    "commit" ->
      System.cmd "git", ~w[add mix.exs], cd: Path.dirname(mix_exs_path)
      System.cmd "git", ~w[commit -m] ++ ["Version bump"], cd: Path.dirname(mix_exs_path)
      {output, _} = System.cmd "git", ~w[diff HEAD~], cd: Path.dirname(mix_exs_path)
      IO.puts output
    _ ->
      {output, _} = System.cmd "git", ~w[diff mix.exs], cd: Path.dirname(mix_exs_path)
      IO.puts output
  end

else
  IO.puts """
  Please specify the path to a valid mix.exs file.
  Usage: mixbump path/to/mix.exs
         mixbump -a path/to/mix.exs (git add mix.exs)
         mixbump -c path/to/mix.exs (git add mix.exs; git commit -m "Version bump")
  """
end
